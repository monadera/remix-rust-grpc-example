name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:dummy@localhost:5432/trading

jobs:
  api-checks:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dummy
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Build
        working-directory: ./api
        env:
          SQLX_OFFLINE: true
        run: cargo build --verbose
      - name: Run Clippy
        working-directory: ./api
        env:
          SQLX_OFFLINE: true
        run: cargo clippy --all-targets --all-features -- -Dclippy::all -D warnings
      - name: Setup database
        working-directory: ./api
        run: |
          cargo install sqlx-cli --no-default-features --features postgres
          sqlx database create
          sqlx migrate run
      - name: Run tests
        working-directory: ./api
        run: cargo test --verbose

  webapp-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install packages
        working-directory: ./webapp
        run: npm ci
      - name: Typecheck
        working-directory: ./webapp
        run: npm run typecheck
      - name: Lint
        working-directory: ./webapp
        run: npm run lint
      - name: Format
        working-directory: ./webapp
        run: npm run formatcheck
